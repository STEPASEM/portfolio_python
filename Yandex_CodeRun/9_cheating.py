"""
Ссылка: https://coderun.yandex.ru/problem/cheating

Тип: Легкая

Раздел: Алгоритмы

Во время контрольной работы профессор Флойд заметил, что некоторые студенты обмениваются записками.
Сначала он хотел поставить им всем двойки, но в тот день профессор был добрым, а потому решил разделить
студентов на две группы: списывающих и дающих списывать, и поставить двойки только первым.

У профессора записаны все пары студентов, обменявшихся записками. Требуется определить, сможет ли он разделить
студентов на две группы так, чтобы любой обмен записками осуществлялся от студента одной группы студенту другой группы.
Формат ввода:
В первой строке находятся два числа N и M — количество студентов и количество пар студентов, обменивающихся записками.
Далее в M строках расположены описания пар студентов: два числа, соответствующие номерам студентов,
обменивающихся записками (нумерация студентов идёт с 1). Каждая пара студентов перечислена не более одного раза.
"""


def is_bipartite(adj):
    color = [-1] * len(adj)
    def dfs(v, c):
        color[v] = c
        for u in adj[v]:
            if color[u] == -1:
                if not dfs(u, 1 - c):
                    return False
            elif color[u] == color[v]:
                return False
        return True
    for i in range(len(adj)):
        if color[i] == -1:
            if not dfs(i, 0):
                return False
    return True

def main():
    n, m = map(int, input().split())
    adj = [[] for _ in range(n)]
    for _ in range(m):
        a, b = map(int, input().split())
        adj[a - 1].append(b - 1)
        adj[b - 1].append(a - 1)
    if is_bipartite(adj):
        print("YES")
    else:
        print("NO")


if __name__ == '__main__':
    main()